(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{135:function(t,e,r){"use strict";r.d(e,"a",(function(){return p})),r.d(e,"b",(function(){return b}));var o=r(0),n=r.n(o);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,o)}return r}function c(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function s(t,e){if(null==t)return{};var r,o,n=function(t,e){if(null==t)return{};var r,o,n={},a=Object.keys(t);for(o=0;o<a.length;o++)r=a[o],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(o=0;o<a.length;o++)r=a[o],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var l=n.a.createContext({}),u=function(t){var e=n.a.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):c(c({},e),t)),r},p=function(t){var e=u(t.components);return n.a.createElement(l.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.a.createElement(n.a.Fragment,{},e)}},f=n.a.forwardRef((function(t,e){var r=t.components,o=t.mdxType,a=t.originalType,i=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),p=u(r),f=o,b=p["".concat(i,".").concat(f)]||p[f]||d[f]||a;return r?n.a.createElement(b,c(c({ref:e},l),{},{components:r})):n.a.createElement(b,c({ref:e},l))}));function b(t,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=r.length,i=new Array(a);i[0]=f;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:o,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},97:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return i})),r.d(e,"metadata",(function(){return c})),r.d(e,"toc",(function(){return s})),r.d(e,"default",(function(){return u}));var o=r(3),n=r(8),a=(r(0),r(135)),i={id:"git-workflow-tutorial",title:"Git workflow Tutorial",sidebar_label:"Git Workflow"},c={unversionedId:"tutorials/git-workflow-tutorial",id:"tutorials/git-workflow-tutorial",isDocsHomePage:!1,title:"Git workflow Tutorial",description:"In this tutorial, we explain step by step how to program an open source project using the GitHub platform. This is a repository with access to various functions and tools for project development and administration.",source:"@site/docs/tutorials/workflow-tutorial.md",slug:"/tutorials/git-workflow-tutorial",permalink:"/docs/tutorials/git-workflow-tutorial",editUrl:"https://github.com/eoscostarica/guide.eoscostarica.io/tree/master/docs/tutorials/workflow-tutorial.md",version:"current",lastUpdatedBy:"JustinCast",lastUpdatedAt:1617898493,formattedLastUpdatedAt:"4/8/2021",sidebar_label:"Git Workflow",sidebar:"docs",previous:{title:"Markdown Guide",permalink:"/docs/tutorials/markdown-guide"},next:{title:"GitHub Guide",permalink:"/docs/tutorials/github-guide"}},s=[],l={toc:s};function u(t){var e=t.components,r=Object(n.a)(t,["components"]);return Object(a.b)("wrapper",Object(o.a)({},l,r,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"In this tutorial, we explain step by step how to program an open source project using the ",Object(a.b)("strong",{parentName:"p"},"GitHub")," platform. This is a repository with access to various functions and tools for project development and administration."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"GitHub")," contains a function called ",Object(a.b)("inlineCode",{parentName:"p"},"forking"),", which allows you to copy a repository from another account and request access to modify it in the user's account. In case the user decides to make sharing changes, he can send a notification to the original owner of the repository called ",Object(a.b)("inlineCode",{parentName:"p"},"pull request"),". In this way, you can unify the changes with the original repository, this is called ",Object(a.b)("inlineCode",{parentName:"p"},"merge"),"."),Object(a.b)("iframe",{width:"100%",height:"350",src:"https://www.youtube.com/embed/K33cFzHWBt0",frameborder:"0",allowfullscreen:"true"}))}u.isMDXComponent=!0}}]);